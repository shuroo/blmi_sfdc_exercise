/**
 * Controller class for managing loan request operations.
 * 
 * This class provides methods for retrieving loan details from the Loan_Request__c object.
 * It is marked as "with sharing" to enforce sharing rules for the current user context.
 * 
 * <p>
 * The main functionality includes:
 * - Retrieving loan details for a specific loan ID.
 * </p>
 *
 * @author Shiri Rave   
 * @date 18/05/25
 */
public with sharing class LoanRequestController {

    /**
     * Retrieves the details of a loan request by its ID.
     * 
     * This method is annotated with @AuraEnabled to allow it to be called from Lightning components.
     * It is cacheable, meaning that the results can be cached for better performance.
     *
     * @param loanId The ID of the loan request to retrieve.
     * @return The Loan_Request__c object containing the loan details, or null if not found.
     */
    @AuraEnabled(cacheable=true)
    public static Loan_Request__c getLoanDetails(String loanId) {
        // Query the specific loan request by ID
        return [SELECT Id, Customer__c, LoanAmount__c, LoanStatus__c FROM Loan_Request__c WHERE Id = :loanId LIMIT 1];
    }

    @AuraEnabled
    public static Loan_Request__c saveLoanRequest(String customerName, Decimal loanAmount, String loanStatus, Date currentDate) {
        // Create a new instance of the Loan_Request__c object
        Loan_Request__c newLoanRequest = new Loan_Request__c();
        
         
         // Create test data
        List<Customer> customers = [SELECT Id from Customer WHERE Name = :customerName LIMIT 1];
        Customer customer = null;
        if (customers.isEmpty()) {
        // Customer does not exist
            System.debug('Customer not found in db, creating a new customer');
            customer = new Customer(Name = customerName);
        insert customer; // Insert the Customer record
        } else {
            // Customer exists
            customer = customers[0];  
            System.debug('Customer found: ' + customer.Id);
            
        }

   
        // Set the fields with the incoming parameters
        newLoanRequest.Customer__c = customer.Id;  
        newLoanRequest.LoanAmount__c = loanAmount;  
        newLoanRequest.LoanStatus__c = loanStatus; 
        newLoanRequest.Date__c =  currentDate;
          
        insert newLoanRequest;
         
        return newLoanRequest;
    }
}